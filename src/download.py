# Generated by Selenium IDE
# -*- coding: UTF-8 -*- 

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium.webdriver.chrome.options import Options
from datetime import datetime
from selenium.common.exceptions import TimeoutException, NoSuchElementException, ElementClickInterceptedException

chrome_options = Options()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')
driver = webdriver.Chrome('/snap/bin/chromium.chromedriver')

def logar():
	driver.get("https://www4.receita.pb.gov.br/atf/")
	driver.set_window_size(1296, 704)
	driver.switch_to.frame(1)
	driver.find_element(By.ID, "login").send_keys('fra13582')
	driver.find_element(By.NAME, "edtDsSenha").click()
	driver.find_element(By.NAME, "edtDsSenha").send_keys('fiscal3336*')
	time.sleep(2)

	driver.find_element(By.NAME, "btnAvancar").click()
	time.sleep(5)
	
def message(i):
	tbody =  driver.find_elements_by_css_selector("tbody")
	strg = 'FIS_1484 - Consulta de NFC-e por Emitente '
	count = 0
	for tr in tbody:
		count+=1
		if count >= 3:
			list = tr.text.split()
			txt = ''
			if len(list) >= 7:
				for i in range(7):
					txt = txt + str(list[i]) + " "

				ID = driver.find_element_by_css_selector('a').get_attribute('href').encode("utf-8");
				print(ID)
				if ID == "":
					message(i)

def listIds():
	Ids = []
	table_id = driver.find_element(By.CLASS_NAME, 'fontePadrao')
	rows = table_id.find_elements(By.TAG_NAME, "a") 
	for row in rows:
	    id_ = row.get_attribute('href').encode("utf-8")
	    if len(id_)>0:
		    ID = id_.split("'")
		    Ids.append(ID[1])
	return Ids	

def download(id):    	
	link = 'https://www4.receita.pb.gov.br/atf/seg/SEGf_MinhasMensagens.do?hidsqMensagem='+id
	driver.get(link)
	table_id = driver.find_element(By.CLASS_NAME, 'fontePadrao')
	el = table_id.find_element(By.TAG_NAME, "a")
	id_son = el.get_attribute('href').encode("utf-8")
	ID_son = id_son.split("'")[1]
	ID_son = int(ID_son)-1
	print ID_son
	link = 'https://www4.receita.pb.gov.br/atf/seg/SEGf_LerMensagem.do?hidsqMensagem='+str(ID_son)+'&sqMensagemPai='+id
	driver.get(link)
	time.sleep(5)
	driver.find_element(By.TAG_NAME, 'a').click();

def verify():
	imgs = driver.find_elements_by_css_selector('img')
	count = 0
	for img in imgs:
		img = img.get_attribute('src').encode("utf-8");
		if img == 'https://www4.receita.pb.gov.br/atf/imagens/clips.gif' and count == 1:
			return True
		count+=1
	return False

def main():
	downloads = []
	notDown = []
	while True:
		try:
			logar()
		except TimeoutException as e:
			logar()
			print(str(e))
		driver.get('https://www4.receita.pb.gov.br/atf/seg/SEGf_MinhasMensagens.do?limparSessao=true')
		Ids = sorted(set(listIds()))
		print Ids
		for id in Ids:
			print 'P: ' + str(id)
			try:
				if id not in downloads:
					download(id)
				downloads.append(id)
			except (TimeoutException, NoSuchElementException, ElementClickInterceptedException) as e:
				notDown.append(id)
				print(str(e))

		list_Down = sorted(set(notDown))
		print('FINISH')
		print('downloads: ')
		print(downloads)
		print('not downloads:')
		print(list_Down)
